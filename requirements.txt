# Smart Signal Filtering System - Requirements
# Comprehensive requirements for oil-linked equity trading system

# =============================================================================
# CORE DATA SCIENCE & MACHINE LEARNING
# =============================================================================
numpy>=1.21.0
pandas>=1.3.0
scipy>=1.7.0
scikit-learn>=1.0.0

# =============================================================================
# FINANCIAL DATA & TRADING
# =============================================================================
yfinance>=0.2.0
pandas-datareader>=0.10.0
ta-lib>=0.4.0  # Technical analysis library
empyrical>=0.5.0  # Financial risk and performance metrics

# =============================================================================
# NATURAL LANGUAGE PROCESSING & AI
# =============================================================================
transformers>=4.20.0  # HuggingFace transformers
torch>=1.12.0  # PyTorch for deep learning
tokenizers>=0.13.0  # Fast tokenizers
sentence-transformers>=2.2.0  # Sentence embeddings
nltk>=3.7  # Natural language toolkit
textblob>=0.17.0  # Text processing
vaderSentiment>=3.3.2  # VADER sentiment analysis
spacy>=3.4.0  # Advanced NLP
langchain>=0.0.200  # LangChain for AI agents
openai>=0.27.0  # OpenAI API (optional)
anthropic>=0.3.0  # Anthropic API (optional)

# =============================================================================
# WEB SCRAPING & NEWS COLLECTION
# =============================================================================
requests>=2.28.0
beautifulsoup4>=4.11.0
newspaper3k>=0.2.8  # News article extraction
feedparser>=6.0.0  # RSS feed parsing
selenium>=4.0.0  # Web automation (optional)
lxml>=4.9.0  # XML/HTML processing

# =============================================================================
# DATA VISUALIZATION & PLOTTING
# =============================================================================
matplotlib>=3.5.0
seaborn>=0.11.0
plotly>=5.10.0  # Interactive plots
bokeh>=2.4.0  # Interactive visualization
altair>=4.2.0  # Declarative visualization

# =============================================================================
# CONFIGURATION & DATA FORMATS
# =============================================================================
pyyaml>=6.0  # YAML configuration files
python-dotenv>=0.19.0  # Environment variables
configparser>=5.2.0  # Configuration management
json5>=0.9.0  # Extended JSON

# =============================================================================
# DATABASE & STORAGE
# =============================================================================
sqlalchemy>=1.4.0  # Database ORM
sqlite3  # Built-in, no installation needed
redis>=4.0.0  # Caching (optional)
pymongo>=4.0.0  # MongoDB (optional)

# =============================================================================
# TIME SERIES & STATISTICAL ANALYSIS
# =============================================================================
statsmodels>=0.13.0  # Statistical models
arch>=5.3.0  # GARCH models for volatility
pykalman>=0.9.5  # Kalman filtering
tslearn>=0.5.0  # Time series learning

# =============================================================================
# OPTIMIZATION & NUMERICAL COMPUTING
# =============================================================================
cvxpy>=1.2.0  # Convex optimization
pulp>=2.6.0  # Linear programming
scipy>=1.7.0  # Scientific computing
numba>=0.56.0  # JIT compilation for performance

# =============================================================================
# TESTING & DEVELOPMENT
# =============================================================================
pytest>=7.0.0  # Testing framework
pytest-cov>=3.0.0  # Coverage testing
pytest-mock>=3.7.0  # Mocking for tests
hypothesis>=6.50.0  # Property-based testing
black>=22.0.0  # Code formatting
flake8>=4.0.0  # Code linting
mypy>=0.950  # Type checking

# =============================================================================
# JUPYTER & NOTEBOOKS
# =============================================================================
jupyter>=1.0.0
jupyterlab>=3.4.0
ipykernel>=6.15.0
nbformat>=5.7.0
ipywidgets>=7.7.0

# =============================================================================
# LOGGING & MONITORING
# =============================================================================
loguru>=0.6.0  # Advanced logging
structlog>=22.1.0  # Structured logging
prometheus-client>=0.14.0  # Metrics (optional)
psutil>=5.9.0  # System monitoring

# =============================================================================
# UTILITIES & HELPERS
# =============================================================================
tqdm>=4.64.0  # Progress bars
click>=8.1.0  # Command line interface
rich>=12.0.0  # Rich terminal output
colorama>=0.4.5  # Cross-platform colored output
python-dateutil>=2.8.0  # Date utilities
pytz>=2022.1  # Timezone handling
schedule>=1.1.0  # Task scheduling

# =============================================================================
# WEB FRAMEWORKS (FOR API/DASHBOARD)
# =============================================================================
fastapi>=0.78.0  # Fast API framework (optional)
uvicorn>=0.17.0  # ASGI server (optional)
streamlit>=1.20.0  # Web app framework (optional)
dash>=2.4.0  # Interactive web apps (optional)
flask>=2.2.0  # Web framework (optional)

# =============================================================================
# CLOUD & DEPLOYMENT (OPTIONAL)
# =============================================================================
boto3>=1.24.0  # AWS SDK (optional)
google-cloud-storage>=2.5.0  # Google Cloud (optional)
azure-storage-blob>=12.14.0  # Azure (optional)
docker>=6.0.0  # Containerization (optional)

# =============================================================================
# SECURITY & ENCRYPTION
# =============================================================================
cryptography>=37.0.0  # Encryption (optional)
bcrypt>=4.0.0  # Password hashing (optional)

# =============================================================================
# PERFORMANCE & PARALLEL PROCESSING
# =============================================================================
multiprocessing-logging>=0.3.0  # Multiprocessing logging
joblib>=1.1.0  # Parallel processing
dask>=2022.8.0  # Parallel computing (optional)
ray>=1.13.0  # Distributed computing (optional)

# =============================================================================
# SPECIFIC TO OIL/ENERGY TRADING
# =============================================================================
quandl>=3.7.0  # Financial data (optional)
alpha-vantage>=2.3.0  # Alpha Vantage API (optional)
fredapi>=0.4.0  # FRED economic data (optional)

# =============================================================================
# DEVELOPMENT TOOLS (OPTIONAL)
# =============================================================================
pre-commit>=2.19.0  # Git hooks (optional)
bandit>=1.7.0  # Security linting (optional)
safety>=1.10.0  # Security vulnerability checker (optional)

# =============================================================================
# VERSION SPECIFIC DEPENDENCIES
# =============================================================================
# Ensure compatibility with specific versions
setuptools>=65.0.0
wheel>=0.37.0
pip>=22.0.0

# =============================================================================
# SYSTEM DEPENDENCIES (NOT INSTALLED VIA PIP)
# =============================================================================
# These need to be installed separately:
# - TA-Lib: https://www.lfd.uci.edu/~gohlke/pythonlibs/#ta-lib
# - Redis server (if using Redis caching)
# - MongoDB (if using MongoDB storage)
# - Docker (if using containerization)

# =============================================================================
# INSTALLATION NOTES
# =============================================================================
# 1. Install TA-Lib separately:
#    - Windows: Download from https://www.lfd.uci.edu/~gohlke/pythonlibs/#ta-lib
#    - macOS: brew install ta-lib
#    - Linux: apt-get install ta-lib
#
# 2. For GPU support (optional):
#    - Install CUDA toolkit
#    - Install PyTorch with CUDA: pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
#
# 3. For development:
#    - Install pre-commit: pip install pre-commit && pre-commit install
#
# 4. Environment setup:
#    - Create virtual environment: python -m venv venv
#    - Activate: source venv/bin/activate (Linux/Mac) or venv\Scripts\activate (Windows)
#    - Install: pip install -r requirements.txt 